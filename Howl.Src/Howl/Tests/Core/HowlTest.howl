⊐ System.IO;
⊐ InvOp = System.InvalidOperationException;
⊐ NUnit.Framework;
⊐ Active.Howl;
⊐̥ Active.Howl.Path;

⊓ Unit{
‒ ○ HowlTest : TestBase{

    ᴸ ㄹ ρ = "Assets/Howl/Tests/Data";

    ⍜ Setup    ⎚ Howl.warnings = ✗;
    ⍉ Teardown ⎚ Howl.warnings = ✓;

    ؟ ExportFile ⎚ o(Howl.ExportFile($"{ρ}/Valid.howl.test", ∅) ≠ ∅);

    ؟ ExportFile_AsIs(){
        ∙ π = $"{ρ}/NonInteger.howl.test";
        ∙ ㅂ = π.Read();
        ∙ ㄸ = Howl.ExportFile(π, ∅);
        o(ㄸ, ㅂ.Replace(Howl.cerberusWard, ""));
    }

    ؟ ImportDir ⎚ Howl.ImportDir("Assets/", dry: ✓);

    ؟ ImportFile_IntegrityFails() → o(
        Howl.ImportFile($"{ρ}/NonInteger.cs.test", ∅)
            .StartsWith(Howl.cerberusWard), ✓);

    ؟ ImportFile_IntegrityFails_WardOnce(){
        ㄹ ㅂ = $"{ρ}/NonInteger.cs.test", ㄸ = $"{ρ}/Temp.howl.test";
        Howl.ImportFile(ㅂ    , ㄸ);
        Howl.ImportFile(ㅂ = ㄸ, ㄸ);
        ㄹ[] Λ = ㄸ.ReadLines();
        o( Λ[0].Contains(Wards.Cerberus), ✓);
        o( Λ[1].Contains(Wards.Cerberus), ✗);
        // Doesn't work. Try via ADB
        // ㄸ.Del();
    }

    // TODO improve test
    ؟ ImportFile ⎚ o(
        Howl.ImportFile($"{ρ}/Valid.cs.test", ∅)
            .StartsWith(Howl.cerberusWard), ✗);

    // TODO not well formed
    ؟ ImportFile_WithConflict(){
        ∙  π = $"{ρ}/Defeat_cf.scs";
        ⤴ (Config.ι.ignoreConflicts) Howl.ImportFile(π, null);
        ⤵
           ಠᴗಠ<InvOp>( () → Howl.ImportFile(π, null) );
    }

    ؟ ImportAsIs
    ⎚ o(Howl.ImportAsIs($"{Wards.GardenOfEden} as is"), ✓);

    ؟ ExportAsIs ⎚ o(Howl.ExportAsIs($"{Wards.Cerberus} as is"), ✓);

    ؟ NitPickAsIs(){
        o(Howl.NitPickAsIs($"{Wards.Cerberus} as is"), ✓);
        o(Howl.NitPickAsIs($"{Wards.GardenOfEden} as is"), ✓);
    }

    ؟ NitPick(){
        ㄹ ㅂ = $"{ρ}/Sample.Howl", ㄸ = $"{ρ}/PolishedSample.Howl";
        Howl.NitPick(ㅂ, ㄸ, force: true);
        o( ㄸ.Read().Contains("≥") );
        ㄸ.Delete();
    }

    ؟ NitPick_AsIs(){
        ㄹ ㅂ = $"{ρ}/NonInteger.howl.test",
           ㄸ = $"{ρ}/NonIntegerAsIs.Howl.test";
        ∙ z = Howl.NitPick(ㅂ, ㄸ);
        o(z, ㅂ.Read());
        // Since output is unchanged, no file is output
        o(ㄸ.Exists(), ✗);
    }

}}
