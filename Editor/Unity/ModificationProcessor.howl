‚äê System.IO;
‚äê UnityEditor; ‚äê UnityEngine;
‚äê RemoveOpt = UnityEditor.RemoveAssetOptions;
‚äêÃ• UnityEditor.AssetMoveResult; ‚äêÃ• UnityEditor.AssetDeleteResult;
‚äê ADB = UnityEditor.AssetDatabase;

‚äì Active.Howl{
‚Äí ‚óã ModificationProcessor : UnityEditor.AssetModificationProcessor{

    ‚ÄíÃ• „Öá warnings = ‚úì;

    ‚àò AssetDeleteResult OnWillDeleteAsset(„Ñπ œÄ, RemoveOpt opt){
        ‚§¥ (œÄ.HasBuildImage()){
            œÄ.BuildPath().DeleteFileOrDir(withMetaFile: ‚úì);
            ADB.Refresh();
            ‚Æê DidNotDelete;
        } ‚§≥ (œÄ.IsHowlBound())
            ü¶û "Do not modify Howl-bound assets";
            ‚Æê FailedDelete;
    }

    ‚àò AssetMoveResult OnWillMoveAsset(„Ñπ src, „Ñπ dst){
        ‚§¥ (src.IsBuildRoot())      ‚Æê WillMoveBuildRoot(src, dst);
        ‚§≥ (src.IsHowlRoot())       ‚Æê WillMoveHowlRoot(src, dst);
        ‚§≥ (!Config.Œπ.allowExport)  ‚Æê DidNotMove;
        ‚§≥ (src.HasBuildImage())    ‚Æê WillMoveHowlAsset(src, dst);
        ‚Æê DidNotMove;
    }

    // TRANSITIONAL
    ‚àò AssetMoveResult WillMoveHowlRoot(„Ñπ src, „Ñπ dst){
        ü¶û "Moving the Howl root is not allowed"; ‚Æê FailedMove;
    }

    // TRANSITIONAL
    ‚àò AssetMoveResult WillMoveBuildRoot(„Ñπ src, „Ñπ dst){
        ü¶û "Moving the build root is not allowed"; ‚Æê FailedMove;
    }

    ‚àò AssetMoveResult WillMoveHowlAsset(„Ñπ src, „Ñπ dst){
        ‚àô Œ≤ = src.BuildPath();
        ‚§¥ (dst.In(Path.howlRoot))
            Œ≤.MoveTo(dst.BuildPath(), withMetaFile: ‚úì);
        ‚§µ {
            üê∞ "Deleting C# file (Howl script moved out of scope)";
            Œ≤.Delete(withMetaFile: ‚úì);
        }
        ADB.Refresh(); ‚Æê DidNotMove;
    }

    // PENDING ------------------------------------------------------

    // TODO needs review
    ‚àò AssetMoveResult WillMoveHowlRoot_inReview(„Ñπ src, „Ñπ dst){
        src = src.DirName(); dst = dst.DirName();
        // TODO edge cases?
        src.MoveFiles(dst, relTo: src, dry: ‚úó, "*.howl");
        ADB.Refresh();
        ‚Æê DidNotMove;
    }

    // TODO used rule while migrating the howl project; needs review
    ‚àò AssetMoveResult WillMoveBuildRoot_inReview(„Ñπ src, „Ñπ dst){
        src = src.DirName(); dst = dst.DirName();
        src.MoveFiles(dst, relTo: src, dry: ‚úó, "*.cs", "*.asmdef");
        ADB.Refresh();
        ‚Æê DidNotMove;
    }

}}
