⊐ UnityEngine; ⊐ UnityEditor; ⊐̥ UnityEngine.Color; ⊐̥ That.GUI;
⊐ S = Active.Howl.UIStrings.Main;

⊓ Active.Howl.UI {
‒ ○ Window : EditorWindow{

    ∘ Color DiscordColor = ⌢ Color(0.16f, 0.37f, 0.90f);

    [MenuItem("Window/Activ/Howl")]
    ∘ ┈ Init ⎚ EditorWindow.GetWindow<Window>("HOWL").Show();

    ㅇ OnGUI
    ⎚ HeaderUI() ∧ ( GiveBack.UI() ∨ Settings() );

    ㅇ Settings
    ⎚ DevUI() ∧ ImportUI() ∧ ExportUI() ∧ IDEs.UI() ∧ Symset.UI();

    ㅇ HeaderUI
       ⎚ Br(4)
       ∧ H( Hd("HOWL"), repoSize, flex,
            Badge("D", S.Discord, bg: DiscordColor, fg: white),
            Badge("G", S.Github, bg: black, fg: white),
            Badge("?", S.Documentation, bg: black, fg: white),
            Badge ("(╯°□°)╯ ⌒ $", S.Support, -1, bg: red, fg: white) )
       ∧ Hr(padding: 3, count: 3);

    ㅇ DevUI
       ⎚ H( Hd(S.H_Develop), flex, Tg(S.ShowTips, ref cg.showTips))
       ∧ H( B(S.Btn_Refresh, Howl.Refresh),
            B(S.Btn_Rebuild, Howl.Rebuild), flex )
       ∧ Tip(S.DevInfo)
       ∧ Br(4);

    ㅇ ImportUI
       ⎚ H(Hd(S.H_Import), flex, Tg(S.EnableImp, ref cg.allowImport))
       ∧ Br(4)
       ∧ when(cg.allowImport)[
           H( B(S.Btn_ImportAll, Howl.ImportAll), Br(),
               Tg(S.IgConflicts, ref cg.ignoreConflicts), flex), Br()]
       ∧ (cg.allowImport ? ✓ : P(S.ImportWarning, EditorStyles.miniLabel))
       ∧ Tip(S.ImportAllNotice)
       ∧ Br(4);

    ㅇ ExportUI
       ⎚ H(Hd(S.H_Export), flex, Tg(S.EnableExp, ref cg.allowExport))
       ∧ Br(4)
       ∧ when(cg.allowExport)[
           H( B(S.Btn_ExportAll, Howl.ExportAll), flex )
           ∧ Tip(S.ExportAllNotice)]
       ∧ (cg.allowExport ? ✓ : P(S.ExportWarning, EditorStyles.miniLabel));

    ㅇ Tip(ㄹ text) → cg.showTips ? P(text) : ✓;

    // --------------------------------------------------------------

    ㅇ repoSize → P($"{(float)locCache:#,0} loc [{fmtDeltaLoc}]");

    ㄹ fmtDeltaLoc{
        ╭{
            ᆞ δ = locCache - Config.ι.linesOfCode;
            ⮐ δ ☰ 0 ? "" : δ > 0 ? $"+ {δ}" : $"- {-δ}";
        }
    }

    Cache<ᆞ> locCache = ⌢ Cache<ᆞ>( ⎚ Stats.loc, 1000);

    Config cg → Config.ι;

}}
