⊐ Ex = System.Exception;
⊐ System.Linq;
⊐ UnityEditor;

⊓ Active.Howl{
‒ ○ Atom : Ed{

    ‒̥ Atom ι = ⌢ Atom();

    // NOTE: expands correctly on Win, maps to %USERPROFILE%\.atom
    ᴸ ㄹ appDataRoot = "~/.atom";
    ᴸ ㄹ howlExtDir = "~/.atom/packages/language-howl";
    ᴸ ㄹ defaultUserSnippetsPath
              = "packages/language-howl/snippets/language-howl.cson";
    ᴸ ㄹ userSnippetsPathKey = "Atom.User.Snippets.Path";

    ‒ ㄹ Format(Snippet x) →
        $"  '{x.name}':\n"
      + $"    prefix : '{x.prefix}'\n"
      + $"    body   : '{x.body}'";

    ‒ ㄹ GenUserSnippets(ㅇ dry){
        ∙ snips = SnippetGen.Create();
        ∙ ㄸ = "'.source.howl':"
              + snips.Aggregate("", (x, y) → $"{x}\n{Format(y)}")
              + '\n';
        DoExportSnippets(ㄸ, dry);
        ⮐ ㄸ;
    }

    ┈ DoExportSnippets(ㄹ ㅂ, ㅇ dry){
        ㄹ π = UserSnippetsPath(expand: ✓);
        ⤴(!dry) π.Write(ㅂ);
    }

    ‒ ㄹ UserSnippetsPath(ㅇ expand)
    → EditorPrefs.GetString(userSnippetsPathKey,
                             DefaultUserSnippetsPath(expand));

    ‒ ┈ SetUserSnippetsPath(ㄹ ㅂ)
    → EditorPrefs.SetString(userSnippetsPathKey, ㅂ);

    ‒ ㄹ DefaultUserSnippetsPath(ㅇ expand){
        ∙ ㄸ = $"{appDataRoot}/{defaultUserSnippetsPath}";
        ⮐ expand ? ㄸ.Expand() : ㄸ;
    }

    ‒ ㄹ Name() → nameof(Atom);

    ‒ ㅇ Exists() → appDataRoot.Expand().IsDir();

    ‒ ㅇ SupportsHowl() → howlExtDir.Expand().IsDir();

}}
