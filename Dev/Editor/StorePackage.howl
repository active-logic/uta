‚äì Active.Howl.Util{
‚àò ‚óã StorePackage{

    Ô∏≤Ã• ‚îà Prep(){
        „Öá dry = ‚úó;
        ‚àô œÅ = "../UAS/Howl-2018";
        ‚àô „Ñ∏ = $"{œÅ}/Assets/Howl";
        üê∞ "Preparing asset store package";
        //
        $"{œÅ}/Howl.cfg".Delete(withMetaFile: ‚úì);
        „Ñ∏.RmDir(withMetaFile: ‚úì);
        // $"{„Ñ∏}/../~build".RmDir(withMetaFile: ‚úì);
        //
        "Assets/Howl/~build/Howl/Runtime"
            .CopyFiles($"{„Ñ∏}/Runtime",
                       relTo: "Assets/Howl/~build/Howl/Runtime",
                       mkdir: ‚úì, dry: dry, "*.cs");
       "Assets/Howl/~build/Howl/Editor"
            .CopyFiles($"{„Ñ∏}/Editor",
                       relTo: "Assets/Howl/~build/Howl/Editor",
                       mkdir: ‚úì, dry: dry, "*.cs");
        // Can't add 2 directories to UAS bundle
        // "Assets/Howl/~build/Howl/Demo"
        //        .CopyFiles($"{„Ñ∏}/../~build/Howl/Demo",
        //           relTo: "Assets/Howl/~build/Howl/Demo",
        //           mkdir: ‚úì, dry: dry, "*.*");
        "Assets/Howl/Demo"
            .CopyFiles($"{„Ñ∏}/Demo",
                       relTo: "Assets/Howl/Demo",
                       mkdir: ‚úì, dry: dry, "*.*");
        "Assets/Howl/Z"
            .CopyFiles($"{„Ñ∏}/Z",
                       relTo: "Assets/Howl/Z",
                       mkdir: ‚úì, dry: dry, "*.*");
        "Assets/Howl/Readme.txt"
            .CopyTo($"{„Ñ∏}/Readme.txt", mkdir: ‚úì, dry: dry);
        "Assets/Howl/package.json"
            .CopyTo($"{„Ñ∏}/package.json", mkdir: ‚úì, dry: dry);
    }

}}
